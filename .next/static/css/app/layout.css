/*!*********************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[14].oneOf[12].use[2]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[14].oneOf[12].use[3]!./src/styles/tailwind.css ***!
  \*********************************************************************************************************************************************************************************************************************************************************************/
/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-amber-300: oklch(87.9% 0.169 91.605);
    --color-amber-400: oklch(82.8% 0.189 84.429);
    --color-amber-500: oklch(76.9% 0.188 70.08);
    --color-emerald-50: oklch(97.9% 0.021 166.113);
    --color-emerald-200: oklch(90.5% 0.093 164.15);
    --color-emerald-300: oklch(84.5% 0.143 164.978);
    --color-emerald-400: oklch(76.5% 0.177 163.223);
    --color-emerald-500: oklch(69.6% 0.17 162.48);
    --color-emerald-600: oklch(59.6% 0.145 163.225);
    --color-emerald-900: oklch(37.8% 0.077 168.94);
    --color-sky-300: oklch(82.8% 0.111 230.318);
    --color-sky-400: oklch(74.6% 0.16 232.661);
    --color-sky-500: oklch(68.5% 0.169 237.323);
    --color-violet-300: oklch(81.1% 0.111 293.571);
    --color-pink-300: oklch(82.3% 0.12 346.018);
    --color-rose-50: oklch(96.9% 0.015 12.422);
    --color-rose-200: oklch(89.2% 0.058 10.001);
    --color-rose-400: oklch(71.2% 0.194 13.428);
    --color-rose-500: oklch(64.5% 0.246 16.439);
    --color-zinc-50: oklch(98.5% 0 0);
    --color-zinc-100: oklch(96.7% 0.001 286.375);
    --color-zinc-200: oklch(92% 0.004 286.32);
    --color-zinc-300: oklch(87.1% 0.006 286.286);
    --color-zinc-400: oklch(70.5% 0.015 286.067);
    --color-zinc-500: oklch(55.2% 0.016 285.938);
    --color-zinc-600: oklch(44.2% 0.017 285.786);
    --color-zinc-700: oklch(37% 0.013 285.805);
    --color-zinc-800: oklch(27.4% 0.006 286.033);
    --color-zinc-900: oklch(21% 0.006 285.885);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 33rem;
    --container-xl: 36rem;
    --container-2xl: 40rem;
    --container-3xl: 50rem;
    --container-5xl: 66rem;
    --text-xs: 0.8125rem;
    --text-xs--line-height: 1.5rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: 1.5rem;
    --text-base: 1rem;
    --text-base--line-height: 1.75rem;
    --text-2xl: 1.5rem;
    --text-2xl--line-height: 2rem;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-2xl: 1rem;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --blur-xs: 4px;
    --blur-sm: 8px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --text-2xs: 0.75rem;
    --text-2xs--line-height: 1.25rem;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .inset-x-0 {
    inset-inline: calc(var(--spacing) * 0);
  }
  .inset-y-0 {
    inset-block: calc(var(--spacing) * 0);
  }
  .inset-y-\[-30\%\] {
    inset-block: -30%;
  }
  .inset-y-\[-50\%\] {
    inset-block: -50%;
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-3\.5 {
    top: calc(var(--spacing) * 3.5);
  }
  .top-14 {
    top: calc(var(--spacing) * 14);
  }
  .top-full {
    top: 100%;
  }
  .top-px {
    top: 1px;
  }
  .right-3 {
    right: calc(var(--spacing) * 3);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .left-2 {
    left: calc(var(--spacing) * 2);
  }
  .left-3 {
    left: calc(var(--spacing) * 3);
  }
  .-z-10 {
    z-index: calc(10 * -1);
  }
  .z-10 {
    z-index: 10;
  }
  .z-50 {
    z-index: 50;
  }
  .m-0 {
    margin: calc(var(--spacing) * 0);
  }
  .mx-0 {
    margin-inline: calc(var(--spacing) * 0);
  }
  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-6 {
    margin-block: calc(var(--spacing) * 6);
  }
  .my-16 {
    margin-block: calc(var(--spacing) * 16);
  }
  .prose {
    --tw-prose-body: oklch(37% 0.013 285.805);
    --tw-prose-headings: oklch(21% 0.006 285.885);
    --tw-prose-links: oklch(69.6% 0.17 162.48);
    --tw-prose-links-hover: oklch(59.6% 0.145 163.225);
    --tw-prose-links-underline: color-mix(in oklab, oklch(69.6% 0.17 162.48) 30%, transparent);
    --tw-prose-bold: oklch(21% 0.006 285.885);
    --tw-prose-counters: oklch(55.2% 0.016 285.938);
    --tw-prose-bullets: oklch(87.1% 0.006 286.286);
    --tw-prose-hr: color-mix(in oklab, oklch(21% 0.006 285.885) 5%, transparent);
    --tw-prose-quotes: oklch(21% 0.006 285.885);
    --tw-prose-quote-borders: oklch(92% 0.004 286.32);
    --tw-prose-captions: oklch(55.2% 0.016 285.938);
    --tw-prose-code: oklch(21% 0.006 285.885);
    --tw-prose-code-bg: oklch(96.7% 0.001 286.375);
    --tw-prose-code-ring: oklch(87.1% 0.006 286.286);
    --tw-prose-th-borders: oklch(87.1% 0.006 286.286);
    --tw-prose-td-borders: oklch(92% 0.004 286.32);
    --tw-prose-invert-body: oklch(70.5% 0.015 286.067);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-links: oklch(76.5% 0.177 163.223);
    --tw-prose-invert-links-hover: oklch(69.6% 0.17 162.48);
    --tw-prose-invert-links-underline: color-mix(in oklab, oklch(69.6% 0.17 162.48) 30%, transparent);
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(70.5% 0.015 286.067);
    --tw-prose-invert-bullets: oklch(44.2% 0.017 285.786);
    --tw-prose-invert-hr: color-mix(in oklab, #fff 5%, transparent);
    --tw-prose-invert-quotes: oklch(96.7% 0.001 286.375);
    --tw-prose-invert-quote-borders: oklch(37% 0.013 285.805);
    --tw-prose-invert-captions: oklch(70.5% 0.015 286.067);
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-code-bg: color-mix(in oklab, oklch(37% 0.013 285.805) 15%, transparent);
    --tw-prose-invert-code-ring: color-mix(in oklab, #fff 10%, transparent);
    --tw-prose-invert-th-borders: oklch(44.2% 0.017 285.786);
    --tw-prose-invert-td-borders: oklch(37% 0.013 285.805);
    color: var(--tw-prose-body);
    font-size: 0.875rem;
    line-height: 1.75rem;
    :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.5rem;
      margin-bottom: 1.5rem;
    }
    :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1rem;
      line-height: 1.75rem;
    }
    :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: decimal;
      margin-top: 1.25rem;
      margin-bottom: 1.25rem;
      padding-left: 1.625rem;
    }
    :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-alpha;
    }
    :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-alpha;
    }
    :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-alpha;
    }
    :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-alpha;
    }
    :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-roman;
    }
    :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-roman;
    }
    :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-roman;
    }
    :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-roman;
    }
    :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: decimal;
    }
    :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: disc;
      margin-top: 1.25rem;
      margin-bottom: 1.25rem;
      padding-left: 1.625rem;
    }
    :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5rem;
      margin-bottom: 0.5rem;
    }
    :where(:is(ol, ul) > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-left: 0.375rem;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
      font-weight: 400;
      color: var(--tw-prose-counters);
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
      color: var(--tw-prose-bullets);
    }
    :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.75rem;
      margin-bottom: 0.75rem;
    }
    :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25rem;
    }
    :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.25rem;
    }
    :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25rem;
    }
    :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.25rem;
    }
    :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.75rem;
      margin-bottom: 0.75rem;
    }
    :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-color: var(--tw-prose-hr);
      border-top-width: 1;
      margin-top: 4rem;
      margin-bottom: 4rem;
      max-width: none;
      margin-left: calc(-1 * 1rem);
      margin-right: calc(-1 * 1rem);
      @screen sm {
        margin-left: calc(-1 * 1.5rem);
        margin-right: calc(-1 * 1.5rem);
      }
      @screen lg {
        margin-left: calc(-1 * 2rem);
        margin-right: calc(-1 * 2rem);
      }
    }
    :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 500;
      font-style: italic;
      color: var(--tw-prose-quotes);
      border-left-width: 0.25rem;
      border-left-color: var(--tw-prose-quote-borders);
      quotes: "\201C""\201D""\2018""\2019";
      margin-top: 2rem;
      margin-bottom: 2rem;
      padding-left: 1.25rem;
    }
    :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: open-quote;
    }
    :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: close-quote;
    }
    :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 700;
      font-size: 1.5rem;
      line-height: 2rem;
      margin-bottom: 0.5rem;
    }
    :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      font-size: 1.125rem;
      line-height: 1.75rem;
      margin-top: 4rem;
      margin-bottom: 0.5rem;
    }
    :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-size: 1rem;
      line-height: 1.75rem;
      font-weight: 600;
      margin-top: 2.5rem;
      margin-bottom: 0.5rem;
    }
    :where(img, video, figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2rem;
      margin-bottom: 2rem;
    }
    :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-captions);
      font-size: 0.8125rem;
      line-height: 1.5rem;
      margin-top: 0.5rem;
    }
    :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      width: 100%;
      table-layout: auto;
      text-align: left;
      margin-top: 2rem;
      margin-bottom: 2rem;
      line-height: 1.5rem;
    }
    :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-th-borders);
    }
    :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      vertical-align: bottom;
      padding-right: 0.5rem;
      padding-bottom: 0.5rem;
      padding-left: 0.5rem;
    }
    :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-left: 0;
    }
    :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-right: 0;
    }
    :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-td-borders);
    }
    :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 0;
    }
    :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      vertical-align: baseline;
    }
    :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-top-width: 1px;
      border-top-color: var(--tw-prose-th-borders);
    }
    :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      vertical-align: top;
    }
    :where(:is(tbody, tfoot) td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-top: 0.5rem;
      padding-right: 0.5rem;
      padding-bottom: 0.5rem;
      padding-left: 0.5rem;
    }
    :where(:is(tbody, tfoot) td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-left: 0;
    }
    :where(:is(tbody, tfoot) td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-right: 0;
    }
    :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-links);
      text-decoration: underline transparent;
      font-weight: 500;
      transition-property: color, text-decoration-color;
      transition-duration: 150ms;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      &:hover {
        color: var(--tw-prose-links-hover);
        text-decoration-color: var(--tw-prose-links-underline);
      }
    }
    :where(:is(h1, h2, h3) a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: inherit;
    }
    :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-bold);
      font-weight: 600;
    }
    :where(:is(a, blockquote, thead th) strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-code);
      border-radius: 0.5rem;
      padding-top: 0.25rem;
      padding-right: 0.375rem;
      padding-bottom: 0.25rem;
      padding-left: 0.375rem;
      box-shadow: inset 0 0 0 1px var(--tw-prose-code-ring);
      background-color: var(--tw-prose-code-bg);
      font-size: 0.75rem;
    }
    :where(:is(a, h1, h2, h3, blockquote, thead th) code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1rem;
      font-weight: inherit;
    }
    :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.875rem;
      font-weight: inherit;
    }
    :where(:is(h1, h2, h3) + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0 !important;
    }
    :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 0 !important;
    }
  }
  .mt-0\.5 {
    margin-top: calc(var(--spacing) * 0.5);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }
  .-mr-1 {
    margin-right: calc(var(--spacing) * -1);
  }
  .mr-auto {
    margin-right: auto;
  }
  .-mb-px {
    margin-bottom: -1px;
  }
  .mb-16 {
    margin-bottom: calc(var(--spacing) * 16);
  }
  .-ml-1 {
    margin-left: calc(var(--spacing) * -1);
  }
  .ml-\[-19rem\] {
    margin-left: -19rem;
  }
  .ml-\[-38rem\] {
    margin-left: -38rem;
  }
  .ml-\[calc\(-1\*var\(--width\)\)\] {
    margin-left: calc(-1 * var(--width));
  }
  .ml-auto {
    margin-left: auto;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }
  .size-12 {
    width: calc(var(--spacing) * 12);
    height: calc(var(--spacing) * 12);
  }
  .h-0\.5 {
    height: calc(var(--spacing) * 0.5);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-7 {
    height: calc(var(--spacing) * 7);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-9 {
    height: calc(var(--spacing) * 9);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-14 {
    height: calc(var(--spacing) * 14);
  }
  .h-100 {
    height: calc(var(--spacing) * 100);
  }
  .h-\[160\%\] {
    height: 160%;
  }
  .h-\[200\%\] {
    height: 200%;
  }
  .h-full {
    height: 100%;
  }
  .h-px {
    height: 1px;
  }
  .min-h-\[calc\(--spacing\(12\)\+1px\)\] {
    min-height: calc(calc(var(--spacing) * 12) + 1px);
  }
  .min-h-full {
    min-height: 100%;
  }
  .w-\(--width\) {
    width: var(--width);
  }
  .w-0\.5 {
    width: calc(var(--spacing) * 0.5);
  }
  .w-2\.5 {
    width: calc(var(--spacing) * 2.5);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-7 {
    width: calc(var(--spacing) * 7);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-278\.25 {
    width: calc(var(--spacing) * 278.25);
  }
  .w-325 {
    width: calc(var(--spacing) * 325);
  }
  .w-full {
    width: 100%;
  }
  .w-px {
    width: 1px;
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-\[calc\(var\(--container-lg\)-\(--spacing\(8\)\)\)\] {
    max-width: calc(var(--container-lg) - (calc(var(--spacing) * 8)));
  }
  .max-w-none {
    max-width: none;
  }
  .max-w-xl {
    max-width: var(--container-xl);
  }
  .flex-auto {
    flex: auto;
  }
  .flex-none {
    flex: none;
  }
  .-translate-y-1\.5 {
    --tw-translate-y: calc(var(--spacing) * -1.5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-1\.5 {
    --tw-translate-y: calc(var(--spacing) * 1.5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .rotate-180 {
    rotate: 180deg;
  }
  .skew-y-\[-18deg\] {
    --tw-skew-y: skewY(-18deg);
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .transform-gpu {
    transform: translateZ(0) var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .animate-spin {
    animation: var(--animate-spin);
  }
  .cursor-default {
    cursor: default;
  }
  .resize {
    resize: both;
  }
  .scroll-mt-24 {
    scroll-margin-top: calc(var(--spacing) * 24);
  }
  .scroll-mt-32 {
    scroll-margin-top: calc(var(--spacing) * 32);
  }
  .list-none {
    list-style-type: none;
  }
  .appearance-none {
    appearance: none;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-\[1fr_1px_1fr\] {
    grid-template-columns: 1fr 1px 1fr;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row-reverse {
    flex-direction: row-reverse;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-0\.5 {
    gap: calc(var(--spacing) * 0.5);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-2\.5 {
    gap: calc(var(--spacing) * 2.5);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }
  .space-y-10 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 10) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 10) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .gap-x-3 {
    column-gap: calc(var(--spacing) * 3);
  }
  .gap-x-4 {
    column-gap: calc(var(--spacing) * 4);
  }
  .gap-x-6 {
    column-gap: calc(var(--spacing) * 6);
  }
  .gap-x-16 {
    column-gap: calc(var(--spacing) * 16);
  }
  .gap-y-2 {
    row-gap: calc(var(--spacing) * 2);
  }
  .gap-y-10 {
    row-gap: calc(var(--spacing) * 10);
  }
  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .divide-zinc-900\/5 {
    :where(& > :not(:last-child)) {
      border-color: color-mix(in srgb, oklch(21% 0.006 285.885) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-zinc-900) 5%, transparent);
      }
    }
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-visible {
    overflow: visible;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-y {
    border-block-style: var(--tw-border-style);
    border-block-width: 1px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
  .border-emerald-500 {
    border-color: var(--color-emerald-500);
  }
  .border-emerald-500\/20 {
    border-color: color-mix(in srgb, oklch(69.6% 0.17 162.48) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-emerald-500) 20%, transparent);
    }
  }
  .border-transparent {
    border-color: transparent;
  }
  .border-zinc-100 {
    border-color: var(--color-zinc-100);
  }
  .border-zinc-200 {
    border-color: var(--color-zinc-200);
  }
  .border-zinc-700 {
    border-color: var(--color-zinc-700);
  }
  .border-zinc-900\/5 {
    border-color: color-mix(in srgb, oklch(21% 0.006 285.885) 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-zinc-900) 5%, transparent);
    }
  }
  .border-zinc-900\/10 {
    border-color: color-mix(in srgb, oklch(21% 0.006 285.885) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-zinc-900) 10%, transparent);
    }
  }
  .border-t-transparent {
    border-top-color: transparent;
  }
  .border-b-white\/7\.5 {
    border-bottom-color: color-mix(in srgb, #fff 7.5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-bottom-color: color-mix(in oklab, var(--color-white) 7.5%, transparent);
    }
  }
  .bg-amber-400\/10 {
    background-color: color-mix(in srgb, oklch(82.8% 0.189 84.429) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-amber-400) 10%, transparent);
    }
  }
  .bg-emerald-50\/50 {
    background-color: color-mix(in srgb, oklch(97.9% 0.021 166.113) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-emerald-50) 50%, transparent);
    }
  }
  .bg-emerald-400\/10 {
    background-color: color-mix(in srgb, oklch(76.5% 0.177 163.223) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-emerald-400) 10%, transparent);
    }
  }
  .bg-emerald-500 {
    background-color: var(--color-emerald-500);
  }
  .bg-rose-50 {
    background-color: var(--color-rose-50);
  }
  .bg-sky-400\/10 {
    background-color: color-mix(in srgb, oklch(74.6% 0.16 232.661) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-sky-400) 10%, transparent);
    }
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/\(--bg-opacity-light\) {
    background-color: #fff;
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) var(--bg-opacity-light), transparent);
    }
  }
  .bg-white\/2\.5 {
    background-color: color-mix(in srgb, #fff 2.5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 2.5%, transparent);
    }
  }
  .bg-white\/5 {
    background-color: color-mix(in srgb, #fff 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
    }
  }
  .bg-zinc-50 {
    background-color: var(--color-zinc-50);
  }
  .bg-zinc-100 {
    background-color: var(--color-zinc-100);
  }
  .bg-zinc-300 {
    background-color: var(--color-zinc-300);
  }
  .bg-zinc-400\/20 {
    background-color: color-mix(in srgb, oklch(70.5% 0.015 286.067) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-zinc-400) 20%, transparent);
    }
  }
  .bg-zinc-400\/25 {
    background-color: color-mix(in srgb, oklch(70.5% 0.015 286.067) 25%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-zinc-400) 25%, transparent);
    }
  }
  .bg-zinc-500 {
    background-color: var(--color-zinc-500);
  }
  .bg-zinc-800 {
    background-color: var(--color-zinc-800);
  }
  .bg-zinc-800\/2\.5 {
    background-color: color-mix(in srgb, oklch(27.4% 0.006 286.033) 2.5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-zinc-800) 2.5%, transparent);
    }
  }
  .bg-zinc-900 {
    background-color: var(--color-zinc-900);
  }
  .bg-zinc-900\/5 {
    background-color: color-mix(in srgb, oklch(21% 0.006 285.885) 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-zinc-900) 5%, transparent);
    }
  }
  .bg-zinc-900\/7\.5 {
    background-color: color-mix(in srgb, oklch(21% 0.006 285.885) 7.5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-zinc-900) 7.5%, transparent);
    }
  }
  .bg-zinc-900\/10 {
    background-color: color-mix(in srgb, oklch(21% 0.006 285.885) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-zinc-900) 10%, transparent);
    }
  }
  .bg-linear-to-r {
    --tw-gradient-position: to right;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to right in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-\[\#36b49f\] {
    --tw-gradient-from: #36b49f;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-\[\#D7EDEA\] {
    --tw-gradient-from: #D7EDEA;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[\#DBFF75\] {
    --tw-gradient-to: #DBFF75;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[\#F4FBDF\] {
    --tw-gradient-to: #F4FBDF;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .mask-\[linear-gradient\(white\,transparent\)\] {
    mask-image: linear-gradient(white,transparent);
  }
  .mask-\[radial-gradient\(farthest-side_at_top\,white\,transparent\)\] {
    mask-image: radial-gradient(farthest-side at top,white,transparent);
  }
  .fill-black\/40 {
    fill: color-mix(in srgb, #000 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      fill: color-mix(in oklab, var(--color-black) 40%, transparent);
    }
  }
  .fill-black\/50 {
    fill: color-mix(in srgb, #000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      fill: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }
  .fill-black\/\[0\.02\] {
    fill: color-mix(in srgb, #000 2%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      fill: color-mix(in oklab, var(--color-black) 2%, transparent);
    }
  }
  .fill-emerald-400 {
    fill: var(--color-emerald-400);
  }
  .fill-emerald-500 {
    fill: var(--color-emerald-500);
  }
  .fill-white {
    fill: var(--color-white);
  }
  .fill-zinc-500\/20 {
    fill: color-mix(in srgb, oklch(55.2% 0.016 285.938) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      fill: color-mix(in oklab, var(--color-zinc-500) 20%, transparent);
    }
  }
  .fill-zinc-700 {
    fill: var(--color-zinc-700);
  }
  .fill-zinc-700\/10 {
    fill: color-mix(in srgb, oklch(37% 0.013 285.805) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      fill: color-mix(in oklab, var(--color-zinc-700) 10%, transparent);
    }
  }
  .fill-zinc-900 {
    fill: var(--color-zinc-900);
  }
  .stroke-black\/5 {
    stroke: color-mix(in srgb, #000 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      stroke: color-mix(in oklab, var(--color-black) 5%, transparent);
    }
  }
  .stroke-black\/50 {
    stroke: color-mix(in srgb, #000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      stroke: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }
  .stroke-black\/70 {
    stroke: color-mix(in srgb, #000 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      stroke: color-mix(in oklab, var(--color-black) 70%, transparent);
    }
  }
  .stroke-current {
    stroke: currentcolor;
  }
  .stroke-white {
    stroke: var(--color-white);
  }
  .stroke-zinc-200 {
    stroke: var(--color-zinc-200);
  }
  .stroke-zinc-500 {
    stroke: var(--color-zinc-500);
  }
  .stroke-zinc-700 {
    stroke: var(--color-zinc-700);
  }
  .stroke-zinc-900 {
    stroke: var(--color-zinc-900);
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .px-0 {
    padding-inline: calc(var(--spacing) * 0);
  }
  .px-1\.5 {
    padding-inline: calc(var(--spacing) * 1.5);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }
  .pt-3 {
    padding-top: calc(var(--spacing) * 3);
  }
  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }
  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }
  .pt-10 {
    padding-top: calc(var(--spacing) * 10);
  }
  .pt-14 {
    padding-top: calc(var(--spacing) * 14);
  }
  .pt-16 {
    padding-top: calc(var(--spacing) * 16);
  }
  .pr-3 {
    padding-right: calc(var(--spacing) * 3);
  }
  .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }
  .pr-11 {
    padding-right: calc(var(--spacing) * 11);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .pb-10 {
    padding-bottom: calc(var(--spacing) * 10);
  }
  .pb-16 {
    padding-bottom: calc(var(--spacing) * 16);
  }
  .pl-1\.5 {
    padding-left: calc(var(--spacing) * 1.5);
  }
  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .pl-7 {
    padding-left: calc(var(--spacing) * 7);
  }
  .pl-10 {
    padding-left: calc(var(--spacing) * 10);
  }
  .text-center {
    text-align: center;
  }
  .font-mono {
    font-family: var(--font-mono);
  }
  .font-sans {
    font-family: var(--font-sans);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-2xs {
    font-size: var(--text-2xs);
    line-height: var(--tw-leading, var(--text-2xs--line-height));
  }
  .text-\[0\.625rem\]\/6 {
    font-size: 0.625rem;
    line-height: calc(var(--spacing) * 6);
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-sm\/5 {
    font-size: var(--text-sm);
    line-height: calc(var(--spacing) * 5);
  }
  .text-sm\/6 {
    font-size: var(--text-sm);
    line-height: calc(var(--spacing) * 6);
  }
  .text-sm\/7 {
    font-size: var(--text-sm);
    line-height: calc(var(--spacing) * 7);
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .break-words {
    overflow-wrap: break-word;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .text-amber-500 {
    color: var(--color-amber-500);
  }
  .text-emerald-400 {
    color: var(--color-emerald-400);
  }
  .text-emerald-500 {
    color: var(--color-emerald-500);
  }
  .text-emerald-900 {
    color: var(--color-emerald-900);
  }
  .text-inherit {
    color: inherit;
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .text-sky-500 {
    color: var(--color-sky-500);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-zinc-300 {
    color: var(--color-zinc-300);
  }
  .text-zinc-400 {
    color: var(--color-zinc-400);
  }
  .text-zinc-500 {
    color: var(--color-zinc-500);
  }
  .text-zinc-600 {
    color: var(--color-zinc-600);
  }
  .text-zinc-700 {
    color: var(--color-zinc-700);
  }
  .text-zinc-900 {
    color: var(--color-zinc-900);
  }
  .italic {
    font-style: italic;
  }
  .no-underline {
    text-decoration-line: none;
  }
  .underline {
    text-decoration-line: underline;
  }
  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-40 {
    opacity: 40%;
  }
  .mix-blend-overlay {
    mix-blend-mode: overlay;
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-zinc-900\/10 {
    --tw-shadow-color: color-mix(in srgb, oklch(21% 0.006 285.885) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-zinc-900) 10%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .ring-amber-300 {
    --tw-ring-color: var(--color-amber-300);
  }
  .ring-emerald-300 {
    --tw-ring-color: var(--color-emerald-300);
  }
  .ring-emerald-400\/20 {
    --tw-ring-color: color-mix(in srgb, oklch(76.5% 0.177 163.223) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-emerald-400) 20%, transparent);
    }
  }
  .ring-emerald-500\/20 {
    --tw-ring-color: color-mix(in srgb, oklch(69.6% 0.17 162.48) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-emerald-500) 20%, transparent);
    }
  }
  .ring-rose-200 {
    --tw-ring-color: var(--color-rose-200);
  }
  .ring-sky-300 {
    --tw-ring-color: var(--color-sky-300);
  }
  .ring-zinc-200 {
    --tw-ring-color: var(--color-zinc-200);
  }
  .ring-zinc-300 {
    --tw-ring-color: var(--color-zinc-300);
  }
  .ring-zinc-900\/7\.5 {
    --tw-ring-color: color-mix(in srgb, oklch(21% 0.006 285.885) 7.5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-zinc-900) 7.5%, transparent);
    }
  }
  .ring-zinc-900\/10 {
    --tw-ring-color: color-mix(in srgb, oklch(21% 0.006 285.885) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-zinc-900) 10%, transparent);
    }
  }
  .ring-zinc-900\/25 {
    --tw-ring-color: color-mix(in srgb, oklch(21% 0.006 285.885) 25%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-zinc-900) 25%, transparent);
    }
  }
  .outline-hidden {
    --tw-outline-style: none;
    outline-style: none;
    @media (forced-colors: active) {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .blur-\[26px\] {
    --tw-blur: blur(26px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur-\[2px\] {
    --tw-backdrop-blur: blur(2px);
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-xs {
    --tw-backdrop-blur: blur(var(--blur-xs));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .delay-150 {
    transition-delay: 150ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .will-change-transform {
    will-change: transform;
  }
  .\[--width\:calc\(2\.625rem\+0\.5px\+50\%-min\(50\%\,calc\(var\(--container-lg\)\+\(--spacing\(8\)\)\)\)\)\] {
    --width: calc(2.625rem + 0.5px + 50% - min(50%, calc(var(--container-lg) + (calc(var(--spacing) * 8)))));
  }
  .ring-inset {
    --tw-ring-inset: inset;
  }
  .group-hover\:bg-white\/50 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
        }
      }
    }
  }
  .group-hover\:fill-zinc-900 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        fill: var(--color-zinc-900);
      }
    }
  }
  .group-hover\:stroke-zinc-900 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        stroke: var(--color-zinc-900);
      }
    }
  }
  .group-hover\:opacity-50 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 50%;
      }
    }
  }
  .group-hover\:opacity-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .group-hover\:ring-zinc-900\/10 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-ring-color: color-mix(in srgb, oklch(21% 0.006 285.885) 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--color-zinc-900) 10%, transparent);
        }
      }
    }
  }
  .group-hover\:ring-zinc-900\/25 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-ring-color: color-mix(in srgb, oklch(21% 0.006 285.885) 25%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--color-zinc-900) 25%, transparent);
        }
      }
    }
  }
  .group-hover\/button\:stroke-zinc-400 {
    &:is(:where(.group\/button):hover *) {
      @media (hover: hover) {
        stroke: var(--color-zinc-400);
      }
    }
  }
  .group-focus\:opacity-100 {
    &:is(:where(.group):focus *) {
      opacity: 100%;
    }
  }
  .group-aria-selected\:text-emerald-500 {
    &:is(:where(.group)[aria-selected="true"] *) {
      color: var(--color-emerald-500);
    }
  }
  .placeholder\:text-zinc-500 {
    &::placeholder {
      color: var(--color-zinc-500);
    }
  }
  .first\:pt-0 {
    &:first-child {
      padding-top: calc(var(--spacing) * 0);
    }
  }
  .last\:pb-0 {
    &:last-child {
      padding-bottom: calc(var(--spacing) * 0);
    }
  }
  .empty\:hidden {
    &:empty {
      display: none;
    }
  }
  .hover\:bg-white\/7\.5 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 7.5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 7.5%, transparent);
        }
      }
    }
  }
  .hover\:bg-zinc-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-zinc-200);
      }
    }
  }
  .hover\:bg-zinc-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-zinc-700);
      }
    }
  }
  .hover\:bg-zinc-900\/2\.5 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(21% 0.006 285.885) 2.5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-zinc-900) 2.5%, transparent);
        }
      }
    }
  }
  .hover\:bg-zinc-900\/5 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(21% 0.006 285.885) 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-zinc-900) 5%, transparent);
        }
      }
    }
  }
  .hover\:text-emerald-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-emerald-600);
      }
    }
  }
  .hover\:text-inherit {
    &:hover {
      @media (hover: hover) {
        color: inherit;
      }
    }
  }
  .hover\:text-zinc-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-300);
      }
    }
  }
  .hover\:text-zinc-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-600);
      }
    }
  }
  .hover\:text-zinc-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-900);
      }
    }
  }
  .hover\:shadow-md {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-zinc-900\/5 {
    &:hover {
      @media (hover: hover) {
        --tw-shadow-color: color-mix(in srgb, oklch(21% 0.006 285.885) 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-zinc-900) 5%, transparent) var(--tw-shadow-alpha), transparent);
        }
      }
    }
  }
  .hover\:ring-zinc-500 {
    &:hover {
      @media (hover: hover) {
        --tw-ring-color: var(--color-zinc-500);
      }
    }
  }
  .hover\:ring-zinc-900\/20 {
    &:hover {
      @media (hover: hover) {
        --tw-ring-color: color-mix(in srgb, oklch(21% 0.006 285.885) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--color-zinc-900) 20%, transparent);
        }
      }
    }
  }
  .focus\:w-full {
    &:focus {
      width: 100%;
    }
  }
  .focus\:flex-none {
    &:focus {
      flex: none;
    }
  }
  .focus\:opacity-100 {
    &:focus {
      opacity: 100%;
    }
  }
  .aria-selected\:bg-zinc-50 {
    &[aria-selected="true"] {
      background-color: var(--color-zinc-50);
    }
  }
  .data-closed\:-translate-x-full {
    &[data-closed] {
      --tw-translate-x: -100%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-closed\:scale-95 {
    &[data-closed] {
      --tw-scale-x: 95%;
      --tw-scale-y: 95%;
      --tw-scale-z: 95%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .data-closed\:opacity-0 {
    &[data-closed] {
      opacity: 0%;
    }
  }
  .data-enter\:duration-300 {
    &[data-enter] {
      --tw-duration: 300ms;
      transition-duration: 300ms;
    }
  }
  .data-enter\:ease-out {
    &[data-enter] {
      --tw-ease: var(--ease-out);
      transition-timing-function: var(--ease-out);
    }
  }
  .data-leave\:pointer-events-none {
    &[data-leave] {
      pointer-events: none;
    }
  }
  .data-leave\:duration-200 {
    &[data-leave] {
      --tw-duration: 200ms;
      transition-duration: 200ms;
    }
  }
  .data-leave\:ease-in {
    &[data-leave] {
      --tw-ease: var(--ease-in);
      transition-timing-function: var(--ease-in);
    }
  }
  .data-selected\:not-data-focus\:outline-hidden {
    &[data-selected] {
      &:not(*[data-focus]) {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
    }
  }
  .min-\[416px\]\:contents {
    @media (width >= 416px) {
      display: contents;
    }
  }
  .min-\[416px\]\:hidden {
    @media (width >= 416px) {
      display: none;
    }
  }
  .min-\[416px\]\:max-w-sm {
    @media (width >= 416px) {
      max-width: var(--container-sm);
    }
  }
  .sm\:max-w-xl {
    @media (width >= 40rem) {
      max-width: var(--container-xl);
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:px-6 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .sm\:py-20 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 20);
    }
  }
  .sm\:pb-10 {
    @media (width >= 40rem) {
      padding-bottom: calc(var(--spacing) * 10);
    }
  }
  .sm\:text-sm {
    @media (width >= 40rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .md\:mt-0 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 0);
    }
  }
  .md\:block {
    @media (width >= 48rem) {
      display: block;
    }
  }
  .md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .md\:h-5 {
    @media (width >= 48rem) {
      height: calc(var(--spacing) * 5);
    }
  }
  .md\:w-px {
    @media (width >= 48rem) {
      width: 1px;
    }
  }
  .md\:justify-start {
    @media (width >= 48rem) {
      justify-content: flex-start;
    }
  }
  .md\:bg-zinc-900\/10 {
    @media (width >= 48rem) {
      background-color: color-mix(in srgb, oklch(21% 0.006 285.885) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-zinc-900) 10%, transparent);
      }
    }
  }
  .md\:py-32 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 32);
    }
  }
  .lg\:pointer-events-auto {
    @media (width >= 64rem) {
      pointer-events: auto;
    }
  }
  .lg\:pointer-events-none {
    @media (width >= 64rem) {
      pointer-events: none;
    }
  }
  .lg\:fixed {
    @media (width >= 64rem) {
      position: fixed;
    }
  }
  .lg\:inset-0 {
    @media (width >= 64rem) {
      inset: calc(var(--spacing) * 0);
    }
  }
  .lg\:left-72 {
    @media (width >= 64rem) {
      left: calc(var(--spacing) * 72);
    }
  }
  .lg\:z-30 {
    @media (width >= 64rem) {
      z-index: 30;
    }
  }
  .lg\:z-40 {
    @media (width >= 64rem) {
      z-index: 40;
    }
  }
  .lg\:z-50 {
    @media (width >= 64rem) {
      z-index: 50;
    }
  }
  .lg\:mt-10 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 10);
    }
  }
  .lg\:ml-72 {
    @media (width >= 64rem) {
      margin-left: calc(var(--spacing) * 72);
    }
  }
  .lg\:block {
    @media (width >= 64rem) {
      display: block;
    }
  }
  .lg\:flex {
    @media (width >= 64rem) {
      display: flex;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:w-72 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 72);
    }
  }
  .lg\:max-w-5xl {
    @media (width >= 64rem) {
      max-width: var(--container-5xl);
    }
  }
  .lg\:max-w-md {
    @media (width >= 64rem) {
      max-width: var(--container-md);
    }
  }
  .lg\:flex-auto {
    @media (width >= 64rem) {
      flex: auto;
    }
  }
  .lg\:overflow-y-auto {
    @media (width >= 64rem) {
      overflow-y: auto;
    }
  }
  .lg\:border-r {
    @media (width >= 64rem) {
      border-right-style: var(--tw-border-style);
      border-right-width: 1px;
    }
  }
  .lg\:border-zinc-900\/10 {
    @media (width >= 64rem) {
      border-color: color-mix(in srgb, oklch(21% 0.006 285.885) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-zinc-900) 10%, transparent);
      }
    }
  }
  .lg\:px-6 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .lg\:px-8 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .lg\:py-\[15vh\] {
    @media (width >= 64rem) {
      padding-block: 15vh;
    }
  }
  .lg\:pt-4 {
    @media (width >= 64rem) {
      padding-top: calc(var(--spacing) * 4);
    }
  }
  .lg\:pb-8 {
    @media (width >= 64rem) {
      padding-bottom: calc(var(--spacing) * 8);
    }
  }
  .xl\:sticky {
    @media (width >= 80rem) {
      position: sticky;
    }
  }
  .xl\:top-24 {
    @media (width >= 80rem) {
      top: calc(var(--spacing) * 24);
    }
  }
  .xl\:left-80 {
    @media (width >= 80rem) {
      left: calc(var(--spacing) * 80);
    }
  }
  .xl\:ml-80 {
    @media (width >= 80rem) {
      margin-left: calc(var(--spacing) * 80);
    }
  }
  .xl\:w-80 {
    @media (width >= 80rem) {
      width: calc(var(--spacing) * 80);
    }
  }
  .xl\:max-w-none {
    @media (width >= 80rem) {
      max-width: none;
    }
  }
  .xl\:grid-cols-2 {
    @media (width >= 80rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .xl\:grid-cols-3 {
    @media (width >= 80rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .xl\:grid-cols-4 {
    @media (width >= 80rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .\32 xl\:\[--width\:--spacing\(10\)\] {
    @media (width >= 96rem) {
      --width: calc(var(--spacing) * 10);
    }
  }
  .dark\:block {
    &:where(.dark, .dark *) {
      display: block;
    }
  }
  .dark\:hidden {
    &:where(.dark, .dark *) {
      display: none;
    }
  }
  .dark\:divide-white\/5 {
    &:where(.dark, .dark *) {
      :where(& > :not(:last-child)) {
        border-color: color-mix(in srgb, #fff 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
        }
      }
    }
  }
  .dark\:border-emerald-500\/30 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(69.6% 0.17 162.48) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-emerald-500) 30%, transparent);
      }
    }
  }
  .dark\:border-white\/5 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .dark\:border-white\/10 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:border-zinc-100\/5 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(96.7% 0.001 286.375) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-zinc-100) 5%, transparent);
      }
    }
  }
  .dark\:border-zinc-800 {
    &:where(.dark, .dark *) {
      border-color: var(--color-zinc-800);
    }
  }
  .dark\:border-b-white\/5 {
    &:where(.dark, .dark *) {
      border-bottom-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-bottom-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .dark\:bg-amber-400\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(82.8% 0.189 84.429) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-amber-400) 10%, transparent);
      }
    }
  }
  .dark\:bg-black\/40 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #000 40%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-black) 40%, transparent);
      }
    }
  }
  .dark\:bg-emerald-400\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(76.5% 0.177 163.223) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-emerald-400) 10%, transparent);
      }
    }
  }
  .dark\:bg-emerald-500 {
    &:where(.dark, .dark *) {
      background-color: var(--color-emerald-500);
    }
  }
  .dark\:bg-emerald-500\/5 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(69.6% 0.17 162.48) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-emerald-500) 5%, transparent);
      }
    }
  }
  .dark\:bg-rose-400\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(71.2% 0.194 13.428) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-rose-400) 10%, transparent);
      }
    }
  }
  .dark\:bg-sky-400\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(74.6% 0.16 232.661) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-sky-400) 10%, transparent);
      }
    }
  }
  .dark\:bg-transparent {
    &:where(.dark, .dark *) {
      background-color: transparent;
    }
  }
  .dark\:bg-white\/1 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #fff 1%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 1%, transparent);
      }
    }
  }
  .dark\:bg-white\/2\.5 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #fff 2.5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 2.5%, transparent);
      }
    }
  }
  .dark\:bg-white\/5 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .dark\:bg-white\/7\.5 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #fff 7.5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 7.5%, transparent);
      }
    }
  }
  .dark\:bg-white\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:bg-zinc-400\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(70.5% 0.015 286.067) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-zinc-400) 10%, transparent);
      }
    }
  }
  .dark\:bg-zinc-600 {
    &:where(.dark, .dark *) {
      background-color: var(--color-zinc-600);
    }
  }
  .dark\:bg-zinc-800 {
    &:where(.dark, .dark *) {
      background-color: var(--color-zinc-800);
    }
  }
  .dark\:bg-zinc-800\/40 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(27.4% 0.006 286.033) 40%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-zinc-800) 40%, transparent);
      }
    }
  }
  .dark\:bg-zinc-900 {
    &:where(.dark, .dark *) {
      background-color: var(--color-zinc-900);
    }
  }
  .dark\:bg-zinc-900\/\(--bg-opacity-dark\) {
    &:where(.dark, .dark *) {
      background-color: oklch(21% 0.006 285.885);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-zinc-900) var(--bg-opacity-dark), transparent);
      }
    }
  }
  .dark\:from-\[\#36b49f\]\/30 {
    &:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in oklab, #36b49f 30%, transparent);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:from-\[\#202D2E\] {
    &:where(.dark, .dark *) {
      --tw-gradient-from: #202D2E;
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:to-\[\#303428\] {
    &:where(.dark, .dark *) {
      --tw-gradient-to: #303428;
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:to-\[\#DBFF75\]\/30 {
    &:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in oklab, #DBFF75 30%, transparent);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:mask-\[linear-gradient\(white\,transparent\)\] {
    &:where(.dark, .dark *) {
      mask-image: linear-gradient(white,transparent);
    }
  }
  .dark\:fill-emerald-200\/20 {
    &:where(.dark, .dark *) {
      fill: color-mix(in srgb, oklch(90.5% 0.093 164.15) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        fill: color-mix(in oklab, var(--color-emerald-200) 20%, transparent);
      }
    }
  }
  .dark\:fill-white {
    &:where(.dark, .dark *) {
      fill: var(--color-white);
    }
  }
  .dark\:fill-white\/1 {
    &:where(.dark, .dark *) {
      fill: color-mix(in srgb, #fff 1%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        fill: color-mix(in oklab, var(--color-white) 1%, transparent);
      }
    }
  }
  .dark\:fill-white\/2\.5 {
    &:where(.dark, .dark *) {
      fill: color-mix(in srgb, #fff 2.5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        fill: color-mix(in oklab, var(--color-white) 2.5%, transparent);
      }
    }
  }
  .dark\:fill-white\/10 {
    &:where(.dark, .dark *) {
      fill: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        fill: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:stroke-emerald-200 {
    &:where(.dark, .dark *) {
      stroke: var(--color-emerald-200);
    }
  }
  .dark\:stroke-white {
    &:where(.dark, .dark *) {
      stroke: var(--color-white);
    }
  }
  .dark\:stroke-white\/2\.5 {
    &:where(.dark, .dark *) {
      stroke: color-mix(in srgb, #fff 2.5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        stroke: color-mix(in oklab, var(--color-white) 2.5%, transparent);
      }
    }
  }
  .dark\:stroke-white\/5 {
    &:where(.dark, .dark *) {
      stroke: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        stroke: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .dark\:stroke-white\/10 {
    &:where(.dark, .dark *) {
      stroke: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        stroke: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:stroke-zinc-400 {
    &:where(.dark, .dark *) {
      stroke: var(--color-zinc-400);
    }
  }
  .dark\:stroke-zinc-600 {
    &:where(.dark, .dark *) {
      stroke: var(--color-zinc-600);
    }
  }
  .dark\:stroke-zinc-800 {
    &:where(.dark, .dark *) {
      stroke: var(--color-zinc-800);
    }
  }
  .dark\:text-amber-400 {
    &:where(.dark, .dark *) {
      color: var(--color-amber-400);
    }
  }
  .dark\:text-emerald-200 {
    &:where(.dark, .dark *) {
      color: var(--color-emerald-200);
    }
  }
  .dark\:text-emerald-400 {
    &:where(.dark, .dark *) {
      color: var(--color-emerald-400);
    }
  }
  .dark\:text-rose-400 {
    &:where(.dark, .dark *) {
      color: var(--color-rose-400);
    }
  }
  .dark\:text-rose-500 {
    &:where(.dark, .dark *) {
      color: var(--color-rose-500);
    }
  }
  .dark\:text-sky-400 {
    &:where(.dark, .dark *) {
      color: var(--color-sky-400);
    }
  }
  .dark\:text-white {
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .dark\:text-zinc-400 {
    &:where(.dark, .dark *) {
      color: var(--color-zinc-400);
    }
  }
  .dark\:text-zinc-500 {
    &:where(.dark, .dark *) {
      color: var(--color-zinc-500);
    }
  }
  .dark\:text-zinc-700 {
    &:where(.dark, .dark *) {
      color: var(--color-zinc-700);
    }
  }
  .dark\:opacity-100 {
    &:where(.dark, .dark *) {
      opacity: 100%;
    }
  }
  .dark\:ring-1 {
    &:where(.dark, .dark *) {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .dark\:ring-amber-400\/30 {
    &:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in srgb, oklch(82.8% 0.189 84.429) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-amber-400) 30%, transparent);
      }
    }
  }
  .dark\:ring-emerald-400\/20 {
    &:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in srgb, oklch(76.5% 0.177 163.223) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-emerald-400) 20%, transparent);
      }
    }
  }
  .dark\:ring-emerald-400\/30 {
    &:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in srgb, oklch(76.5% 0.177 163.223) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-emerald-400) 30%, transparent);
      }
    }
  }
  .dark\:ring-emerald-500\/30 {
    &:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in srgb, oklch(69.6% 0.17 162.48) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-emerald-500) 30%, transparent);
      }
    }
  }
  .dark\:ring-rose-500\/20 {
    &:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in srgb, oklch(64.5% 0.246 16.439) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-rose-500) 20%, transparent);
      }
    }
  }
  .dark\:ring-sky-400\/30 {
    &:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in srgb, oklch(74.6% 0.16 232.661) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-sky-400) 30%, transparent);
      }
    }
  }
  .dark\:ring-white\/10 {
    &:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:ring-white\/15 {
    &:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in srgb, #fff 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-white) 15%, transparent);
      }
    }
  }
  .dark\:ring-zinc-500\/20 {
    &:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in srgb, oklch(55.2% 0.016 285.938) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-zinc-500) 20%, transparent);
      }
    }
  }
  .dark\:ring-zinc-700 {
    &:where(.dark, .dark *) {
      --tw-ring-color: var(--color-zinc-700);
    }
  }
  .dark\:ring-zinc-800 {
    &:where(.dark, .dark *) {
      --tw-ring-color: var(--color-zinc-800);
    }
  }
  .dark\:backdrop-blur-sm {
    &:where(.dark, .dark *) {
      --tw-backdrop-blur: blur(var(--blur-sm));
      -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
      backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
  }
  .dark\:prose-invert {
    &:where(.dark, .dark *) {
      --tw-prose-body: var(--tw-prose-invert-body);
      --tw-prose-headings: var(--tw-prose-invert-headings);
      --tw-prose-links: var(--tw-prose-invert-links);
      --tw-prose-links-hover: var(--tw-prose-invert-links-hover);
      --tw-prose-links-underline: var(--tw-prose-invert-links-underline);
      --tw-prose-bold: var(--tw-prose-invert-bold);
      --tw-prose-counters: var(--tw-prose-invert-counters);
      --tw-prose-bullets: var(--tw-prose-invert-bullets);
      --tw-prose-hr: var(--tw-prose-invert-hr);
      --tw-prose-quotes: var(--tw-prose-invert-quotes);
      --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
      --tw-prose-captions: var(--tw-prose-invert-captions);
      --tw-prose-code: var(--tw-prose-invert-code);
      --tw-prose-code-bg: var(--tw-prose-invert-code-bg);
      --tw-prose-code-ring: var(--tw-prose-invert-code-ring);
      --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
      --tw-prose-td-borders: var(--tw-prose-invert-td-borders);
    }
  }
  .dark\:\[--tw-prose-links-hover\:var\(--color-emerald-300\)\] {
    &:where(.dark, .dark *) {
      --tw-prose-links-hover: var(--color-emerald-300);
    }
  }
  .dark\:\[--tw-prose-links\:var\(--color-white\)\] {
    &:where(.dark, .dark *) {
      --tw-prose-links: var(--color-white);
    }
  }
  .dark\:ring-inset {
    &:where(.dark, .dark *) {
      --tw-ring-inset: inset;
    }
  }
  .dark\:group-hover\:bg-emerald-300\/10 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(84.5% 0.143 164.978) 10%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-emerald-300) 10%, transparent);
          }
        }
      }
    }
  }
  .dark\:group-hover\:fill-emerald-300\/10 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          fill: color-mix(in srgb, oklch(84.5% 0.143 164.978) 10%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            fill: color-mix(in oklab, var(--color-emerald-300) 10%, transparent);
          }
        }
      }
    }
  }
  .dark\:group-hover\:fill-zinc-500 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          fill: var(--color-zinc-500);
        }
      }
    }
  }
  .dark\:group-hover\:stroke-emerald-400 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          stroke: var(--color-emerald-400);
        }
      }
    }
  }
  .dark\:group-hover\:ring-emerald-400 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          --tw-ring-color: var(--color-emerald-400);
        }
      }
    }
  }
  .dark\:group-hover\:ring-white\/20 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          --tw-ring-color: color-mix(in srgb, #fff 20%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            --tw-ring-color: color-mix(in oklab, var(--color-white) 20%, transparent);
          }
        }
      }
    }
  }
  .dark\:group-hover\/anchor\:stroke-white {
    &:where(.dark, .dark *) {
      &:is(:where(.group\/anchor):hover *) {
        @media (hover: hover) {
          stroke: var(--color-white);
        }
      }
    }
  }
  .dark\:hover\:bg-emerald-400 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-emerald-400);
        }
      }
    }
  }
  .dark\:hover\:bg-emerald-400\/10 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(76.5% 0.177 163.223) 10%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-emerald-400) 10%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-white\/5 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, #fff 5%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-zinc-700 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-zinc-700);
        }
      }
    }
  }
  .dark\:hover\:bg-zinc-800 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-zinc-800);
        }
      }
    }
  }
  .dark\:hover\:text-emerald-300 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-emerald-300);
        }
      }
    }
  }
  .dark\:hover\:text-emerald-500 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-emerald-500);
        }
      }
    }
  }
  .dark\:hover\:text-white {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-white);
        }
      }
    }
  }
  .dark\:hover\:text-zinc-300 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-zinc-300);
        }
      }
    }
  }
  .dark\:hover\:shadow-black\/5 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-shadow-color: color-mix(in srgb, #000 5%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-black) 5%, transparent) var(--tw-shadow-alpha), transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:ring-emerald-300 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-ring-color: var(--color-emerald-300);
        }
      }
    }
  }
  .dark\:hover\:ring-white\/20 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-ring-color: color-mix(in srgb, #fff 20%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            --tw-ring-color: color-mix(in oklab, var(--color-white) 20%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:ring-zinc-600 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-ring-color: var(--color-zinc-600);
        }
      }
    }
  }
  .dark\:aria-selected\:bg-zinc-800\/50 {
    &:where(.dark, .dark *) {
      &[aria-selected="true"] {
        background-color: color-mix(in srgb, oklch(27.4% 0.006 286.033) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-zinc-800) 50%, transparent);
        }
      }
    }
  }
  .md\:dark\:bg-white\/15 {
    @media (width >= 48rem) {
      &:where(.dark, .dark *) {
        background-color: color-mix(in srgb, #fff 15%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 15%, transparent);
        }
      }
    }
  }
  .lg\:dark\:border-white\/10 {
    @media (width >= 64rem) {
      &:where(.dark, .dark *) {
        border-color: color-mix(in srgb, #fff 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
      }
    }
  }
  .pointer-fine\:hidden {
    @media (pointer: fine) {
      display: none;
    }
  }
  .\[\&\:\:-webkit-search-cancel-button\]\:hidden {
    &::-webkit-search-cancel-button {
      display: none;
    }
  }
  .\[\&\:\:-webkit-search-decoration\]\:hidden {
    &::-webkit-search-decoration {
      display: none;
    }
  }
  .\[\&\:\:-webkit-search-results-button\]\:hidden {
    &::-webkit-search-results-button {
      display: none;
    }
  }
  .\[\&\:\:-webkit-search-results-decoration\]\:hidden {
    &::-webkit-search-results-decoration {
      display: none;
    }
  }
  .\[\&\>\:first-child\]\:mt-0 {
    &>:first-child {
      margin-top: calc(var(--spacing) * 0);
    }
  }
  .\[\&\>\:last-child\]\:mb-0 {
    &>:last-child {
      margin-bottom: calc(var(--spacing) * 0);
    }
  }
  .\[html_\:where\(\&\>\*\)\]\:mx-auto {
    html :where(&>*) {
      margin-inline: auto;
    }
  }
  .\[html_\:where\(\&\>\*\)\]\:max-w-2xl {
    html :where(&>*) {
      max-width: var(--container-2xl);
    }
  }
  .lg\:\[html_\:where\(\&\>\*\)\]\:mx-\[calc\(50\%-min\(50\%\,var\(--container-lg\)\)\)\] {
    @media (width >= 64rem) {
      html :where(&>*) {
        margin-inline: calc(50% - min(50%, var(--container-lg)));
      }
    }
  }
  .lg\:\[html_\:where\(\&\>\*\)\]\:max-w-3xl {
    @media (width >= 64rem) {
      html :where(&>*) {
        max-width: var(--container-3xl);
      }
    }
  }
}
@layer base {
  :root {
    --shiki-color-text: var(--color-white);
    --shiki-token-constant: var(--color-emerald-300);
    --shiki-token-string: var(--color-emerald-300);
    --shiki-token-comment: var(--color-zinc-500);
    --shiki-token-keyword: var(--color-sky-300);
    --shiki-token-parameter: var(--color-pink-300);
    --shiki-token-function: var(--color-violet-300);
    --shiki-token-string-expression: var(--color-emerald-300);
    --shiki-token-punctuation: var(--color-zinc-200);
  }
  [inert] ::-webkit-scrollbar {
    display: none;
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-divide-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
    }
  }
}
